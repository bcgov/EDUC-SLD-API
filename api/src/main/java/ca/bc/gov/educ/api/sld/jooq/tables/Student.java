/*
 * This file is generated by jOOQ.
 */
package ca.bc.gov.educ.api.sld.jooq.tables;


import ca.bc.gov.educ.api.sld.jooq.DefaultSchema;
import ca.bc.gov.educ.api.sld.jooq.Keys;
import ca.bc.gov.educ.api.sld.jooq.tables.records.StudentRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Student extends TableImpl<StudentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>STUDENT</code>
     */
    public static final Student STUDENT = new Student();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StudentRecord> getRecordType() {
        return StudentRecord.class;
    }

    /**
     * The column <code>STUDENT.REPORT_DATE</code>.
     */
    public final TableField<StudentRecord, Long> REPORT_DATE = createField(DSL.name("REPORT_DATE"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>STUDENT.STUDENT_ID</code>.
     */
    public final TableField<StudentRecord, String> STUDENT_ID = createField(DSL.name("STUDENT_ID"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>STUDENT.ADULT_GRAD</code>.
     */
    public final TableField<StudentRecord, String> ADULT_GRAD = createField(DSL.name("ADULT_GRAD"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.ADULT_TOTAL_CRS_HOURS</code>.
     */
    public final TableField<StudentRecord, String> ADULT_TOTAL_CRS_HOURS = createField(DSL.name("ADULT_TOTAL_CRS_HOURS"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.BAND_CODE</code>.
     */
    public final TableField<StudentRecord, String> BAND_CODE = createField(DSL.name("BAND_CODE"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.BIRTH_DATE</code>.
     */
    public final TableField<StudentRecord, String> BIRTH_DATE = createField(DSL.name("BIRTH_DATE"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.BIRTH_DAY</code>.
     */
    public final TableField<StudentRecord, String> BIRTH_DAY = createField(DSL.name("BIRTH_DAY"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.BIRTH_MONTH</code>.
     */
    public final TableField<StudentRecord, String> BIRTH_MONTH = createField(DSL.name("BIRTH_MONTH"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.COLLEGE_COURSES</code>.
     */
    public final TableField<StudentRecord, String> COLLEGE_COURSES = createField(DSL.name("COLLEGE_COURSES"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.COUNTRY_CODE</code>.
     */
    public final TableField<StudentRecord, String> COUNTRY_CODE = createField(DSL.name("COUNTRY_CODE"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.DISTNO</code>.
     */
    public final TableField<StudentRecord, String> DISTNO = createField(DSL.name("DISTNO"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.ENROLLED_GRADE_CODE</code>.
     */
    public final TableField<StudentRecord, String> ENROLLED_GRADE_CODE = createField(DSL.name("ENROLLED_GRADE_CODE"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.ESL_YRS</code>.
     */
    public final TableField<StudentRecord, String> ESL_YRS = createField(DSL.name("ESL_YRS"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.FUND_FEB_SPED</code>.
     */
    public final TableField<StudentRecord, String> FUND_FEB_SPED = createField(DSL.name("FUND_FEB_SPED"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.FY_ADJUST</code>.
     */
    public final TableField<StudentRecord, String> FY_ADJUST = createField(DSL.name("FY_ADJUST"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.GRAD</code>.
     */
    public final TableField<StudentRecord, String> GRAD = createField(DSL.name("GRAD"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.HOME_LANGUAGE_SPOKEN</code>.
     */
    public final TableField<StudentRecord, String> HOME_LANGUAGE_SPOKEN = createField(DSL.name("HOME_LANGUAGE_SPOKEN"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.LEGAL_GIVEN_NAME</code>.
     */
    public final TableField<StudentRecord, String> LEGAL_GIVEN_NAME = createField(DSL.name("LEGAL_GIVEN_NAME"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.LEGAL_MIDDLE_NAME</code>.
     */
    public final TableField<StudentRecord, String> LEGAL_MIDDLE_NAME = createField(DSL.name("LEGAL_MIDDLE_NAME"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.LEGAL_SURNAME</code>.
     */
    public final TableField<StudentRecord, String> LEGAL_SURNAME = createField(DSL.name("LEGAL_SURNAME"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.LOCAL_STUDENT_ID</code>.
     */
    public final TableField<StudentRecord, String> LOCAL_STUDENT_ID = createField(DSL.name("LOCAL_STUDENT_ID"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.NATIVE_ANCESTRY_IND</code>.
     */
    public final TableField<StudentRecord, String> NATIVE_ANCESTRY_IND = createField(DSL.name("NATIVE_ANCESTRY_IND"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.NOT_ELIG_FOR_PROV_FUNDING</code>.
     */
    public final TableField<StudentRecord, String> NOT_ELIG_FOR_PROV_FUNDING = createField(DSL.name("NOT_ELIG_FOR_PROV_FUNDING"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.NUMBER_OF_COURSES</code>.
     */
    public final TableField<StudentRecord, String> NUMBER_OF_COURSES = createField(DSL.name("NUMBER_OF_COURSES"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.NUMBER_OF_SUPPORT_BLOCKS</code>.
     */
    public final TableField<StudentRecord, String> NUMBER_OF_SUPPORT_BLOCKS = createField(DSL.name("NUMBER_OF_SUPPORT_BLOCKS"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.OTHER_COURSES</code>.
     */
    public final TableField<StudentRecord, String> OTHER_COURSES = createField(DSL.name("OTHER_COURSES"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.PEN</code>.
     */
    public final TableField<StudentRecord, String> PEN = createField(DSL.name("PEN"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.POSTAL</code>.
     */
    public final TableField<StudentRecord, String> POSTAL = createField(DSL.name("POSTAL"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.PROVINCE_CODE</code>.
     */
    public final TableField<StudentRecord, String> PROVINCE_CODE = createField(DSL.name("PROVINCE_CODE"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.QUALIFIED_IS_STUDENT_IND</code>.
     */
    public final TableField<StudentRecord, String> QUALIFIED_IS_STUDENT_IND = createField(DSL.name("QUALIFIED_IS_STUDENT_IND"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.SCHLNO</code>.
     */
    public final TableField<StudentRecord, String> SCHLNO = createField(DSL.name("SCHLNO"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.SCHOOL_FUNDING_CODE</code>.
     */
    public final TableField<StudentRecord, String> SCHOOL_FUNDING_CODE = createField(DSL.name("SCHOOL_FUNDING_CODE"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.SEX</code>.
     */
    public final TableField<StudentRecord, String> SEX = createField(DSL.name("SEX"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.SPED_CAT</code>.
     */
    public final TableField<StudentRecord, String> SPED_CAT = createField(DSL.name("SPED_CAT"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.SPED_DESC2</code>.
     */
    public final TableField<StudentRecord, String> SPED_DESC2 = createField(DSL.name("SPED_DESC2"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.STUDENT_FTE_VALUE</code>.
     */
    public final TableField<StudentRecord, String> STUDENT_FTE_VALUE = createField(DSL.name("STUDENT_FTE_VALUE"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.STUDENT_FUNDED_BY_CODE</code>.
     */
    public final TableField<StudentRecord, String> STUDENT_FUNDED_BY_CODE = createField(DSL.name("STUDENT_FUNDED_BY_CODE"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.USUAL_GIVEN_NAME</code>.
     */
    public final TableField<StudentRecord, String> USUAL_GIVEN_NAME = createField(DSL.name("USUAL_GIVEN_NAME"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.USUAL_MIDDLE_NAME</code>.
     */
    public final TableField<StudentRecord, String> USUAL_MIDDLE_NAME = createField(DSL.name("USUAL_MIDDLE_NAME"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>STUDENT.USUAL_SURNAME</code>.
     */
    public final TableField<StudentRecord, String> USUAL_SURNAME = createField(DSL.name("USUAL_SURNAME"), SQLDataType.VARCHAR(255), this, "");

    private Student(Name alias, Table<StudentRecord> aliased) {
        this(alias, aliased, null);
    }

    private Student(Name alias, Table<StudentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>STUDENT</code> table reference
     */
    public Student(String alias) {
        this(DSL.name(alias), STUDENT);
    }

    /**
     * Create an aliased <code>STUDENT</code> table reference
     */
    public Student(Name alias) {
        this(alias, STUDENT);
    }

    /**
     * Create a <code>STUDENT</code> table reference
     */
    public Student() {
        this(DSL.name("STUDENT"), null);
    }

    public <O extends Record> Student(Table<O> child, ForeignKey<O, StudentRecord> key) {
        super(child, key, STUDENT);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public UniqueKey<StudentRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_B;
    }

    @Override
    public List<UniqueKey<StudentRecord>> getKeys() {
        return Arrays.<UniqueKey<StudentRecord>>asList(Keys.CONSTRAINT_B);
    }

    @Override
    public Student as(String alias) {
        return new Student(DSL.name(alias), this);
    }

    @Override
    public Student as(Name alias) {
        return new Student(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Student rename(String name) {
        return new Student(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Student rename(Name name) {
        return new Student(name, null);
    }
}
